#!/bin/zsh
# command -v docker > /dev/null 2>&1 && {
#   function hydra() {
#     docker run oryd/hydra $@
#   }
# }

command -v terraform > /dev/null 2>&1 && {
  function tf () {
    local COMMAND=${1?"Must specify command"}
    shift
    local ENV=${1?"Must specify env"}
    shift
    local IMAGE_TAG=$ENV
    if [[ $# > 0 ]]; then
        case "$1" in
            -*) ;;
            *)
                IMAGE_TAG=$1
                shift
                ;;
        esac
    fi
    echo "[terraform ${COMMAND}] env:${ENV} image_tag:${IMAGE_TAG} options: $@"
    terraform init && terraform workspace select ${ENV} && terraform ${COMMAND} -var-file="./tfvars/${ENV}.tfvars" -var "image_tag=${IMAGE_TAG}" "$@"
  }

  function tfdiff () {
    diff -U10000 -w =(eval "echo $(pbpaste | awk -F"=>" '{print $1}')" | jq '.[].environment |= (. | sort_by(.name))') =(eval "echo $(pbpaste | awk -F"=>" '{print $2}')" | jq '.[].environment |= (. | sort_by(.name))')
  }

  alias tfapply="tf apply"
  alias tfplan="tf plan"
  alias tfdestroy="tf destroy"
  alias tfrefresh="tf refresh"
}

command -v tfswitch > /dev/null 2>&1 && {
  alias tfswitch="tfswitch -b ${HOME}/.bin/terraform"
}

command -v aws > /dev/null 2>&1 && {
  kms-decrypt () {
    aws kms decrypt --ciphertext-blob fileb://<(printf $(pbpaste) | base64 -d) | jq -r .Plaintext | base64 -d | xxd
  }

  kms-encrypt () {
      aws kms encrypt --key-id ${1} --plaintext fileb://<(printf $(pbpaste)) --output text --query CiphertextBlob
  }

  kms-encrypt-base64 () {
      aws kms encrypt --key-id ${1} --plaintext fileb://<(printf $(pbpaste) | base64) --output text --query CiphertextBlob
  }
}
